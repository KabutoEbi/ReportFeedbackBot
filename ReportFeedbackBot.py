import discord
import random
import os
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv('TOKEN')

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f'Logged in as {client.user}')
    print('Bot is online')

@client.event
async def on_message(message):
    if message.author == client.user:
        return
    if random.random() < 0.05:
        responses = [
            "#考察の根拠が不十分です。納得のいく根拠を示してください。",
            "#実験結果について考察を論理的に行ってください。",
            "#図表におかしな点があります。よく確認してください。",
            "#実験結果を示す際には「実験結果を図○および表△に示す。」というような文章を書いて，図表を参照してください。",
            "#参考文献が一切無いまたは，参考文献の書き方がおかしいです。参考文献の書き方は実験指導書をよく読んで書いてください。また，どの部分で参考にしているのかも示してください。",
            "#表の値または単位が間違っている可能性があります。確認して修正して下さい。",
            "#グラフが間違っているか，サイズや明瞭さが不適切または原本がついていないです。",
            "#実験時の写真とシステム(構成)図を載せてください。システム(構成)図はPowerpoint等で作成したものを図として張り付けてください。",
            "#数値には単位を記載してください。数値のみの場合は，単位をそのまま記入してください。変数や数式の際は[ ]を付けて単位を記入してください。",
            "#変数 は斜体で表現されています。例えばi, θ などです。斜体で表記するものは斜体で表記してください。",
            "＃以降は無視。",
            "素晴らしい考察です！",
            "#表の値または単位が間違っているまたは，SI接頭辞が使用されていない可能性があります。確認して修正して下さい。",
            "#グラフのプロットやグラフの引き方，目盛値の不足等でグラフが未完成となっています。修正してください。",
            "#図表番号と図表タイトルがありません。もしくは不適切ですので，修正してください。",
            "未修正",
            "#表紙がテンプレートと違います。実験のmoodleページにアップロードされているテンプレートを使ってください。指導書p.55に書いてある指導書の書き方に従ってレポートを作成してください。",
            "#各実験の実験方法に実験器具を記載してください。",
            "#実験器具のメーカー名，型番，シリアルナンバーが分かりやすいように記載してください。",
            "#グラフの原本がついていません。レポートの最終ページにグラフの原本を付けてください。",
            "#真値と実測値の誤差の発生原因について記載してください。",
            "修正お疲れさまでした。レポート合格です。押印されている表紙を再利用して，新たに紙印刷をしたレポートを提出してください。その際に，グラフ原本も忘れず最終ページに付けてください。よろしくお願いします。",
            "考察がほぼありませんし，体裁も整っていない状態での提出となります。そのため大きな減点となります。",
            "未修正項目多数の為，減点となります。"
        ]
        response = random.choice(responses)
        await message.channel.send(response)

client.run(TOKEN)